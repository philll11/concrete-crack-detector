<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head content ... -->
    <title>Classification Results</title>
    <link rel="icon" href="/images/app-favicon.ico" type="image/png">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="container">
        <header class="page-header">
            <h1>Classification Results</h1>
            <img src="/images/app-logo.png" alt="Application Logo" class="header-logo">
        </header>

        <% if (typeof results !== 'undefined' && results.length > 0) { %>

            <div class="results-scroll-container">
                <% results.forEach((result, index) => { %>
                    <div class="result-item card highlight-border">

                        <div class="classification-section">
                            <!-- Add checkbox for each result -->
                            <!-- This checkbox is used to select results for batch actions -->
                            <div class="result-header">
                                <h2 id="heading_<%= result.id %>">
                                    <label for="checkbox_<%= result.id %>" class="checkbox-label-wrapper"> <!-- Make heading clickable for checkbox -->
                                        Result #<%= index + 1 %> - <%= result.filename %>
                                    </label>
                                </h2>
                                <input type="checkbox"
                                       class="incident-select-checkbox visually-hidden"
                                       id="checkbox_<%= result.id %>"
                                       data-result-id="<%= result.id %>"
                                       aria-labelledby="heading_<%= result.id %>">
                                <label for="checkbox_<%= result.id %>" class="select-toggle-button">
                                    <!-- Text will be handled by CSS potentially -->
                                    Select
                                </label>
                            </div>

                            <% if (result.classification) { %>
                                <!-- Hidden inputs -->
                                <input type="hidden" id="imageDataUrl_<%= result.id %>" value="<%= result.originalImageDataUrl %>">
                                <input type="hidden" id="imageFilename_<%= result.id %>" value="<%= result.filename %>">
                                <input type="hidden" id="classificationData_<%= result.id %>" value="<%= JSON.stringify(result.classification) %>">

                                <!-- Display Text Results -->
                                <% if (typeof result.classification.crackDetected === 'boolean') { %>
                                    <div class="classification-summary">
                                        <p class="result-label">Result: <%= result.classification.crackDetected ? 'Cracks Detected' : 'No Cracks Detected' %></p>
                                    </div>
                                <% } else { %>
                                    <div class="classification-summary">
                                        <p class="result-label">Result: <%= result.classification.crackDetected %></p>
                                    </div>
                                <% } %>
                                <% if (typeof result.classification.confidence === 'number') { %>
                                    <div class="classification-confidence">
                                        <p>Confidence: <%= result.classification.confidence.toFixed(2) %></p>
                                    </div>
                                <% } %>

                                <!-- Wrapper for Side-by-Side Images -->
                                <div class="image-comparison-wrapper">
                                    <!-- Original Image -->
                                    <div class="original-image-container">
                                        <h4>Original Image:</h4>
                                        <img src="<%= result.originalImageDataUrl %>" alt="Original image for <%= result.filename %>" class="original-image">
                                    </div>
                                     <!-- Classified Image -->
                                     <% if (result.classifiedImageDataUrl) { %>
                                        <div class="classified-image-container">
                                            <h4>Classified Image:</h4>
                                            <img src="<%= result.classifiedImageDataUrl %>" alt="Classified image for <%= result.filename %>" class="classified-image">
                                        </div>
                                    <% } else { %>
                                        <div class="classified-image-container placeholder">
                                            <h4>Classified Image:</h4>
                                            <p><em>(Not provided)</em></p>
                                        </div>
                                    <% } %>
                                </div>

                                <hr class="section-divider">

                            <% } else { %>
                                <div class="error-message">
                                    <p style="color: red;">Error: No classification data received for this file.</p>
                                </div>
                            <% } %>
                        </div>
                    </div> <!-- End of .result-item -->

                    <% if (index < results.length - 1) { %>
                         <hr class="major-divider">
                    <% } %>

                <% }) %> <!-- End of forEach loop -->
            </div> <!-- End of .results-scroll-container -->

        <% } else { %>
            <div class="card highlight-border">
                <p>No classification results to display.</p>
            </div>
        <% } %>

        <hr class="major-divider">

        <!--Send Selected to Incident API Button-->
        <div class="global-actions-section card">
            <button type="button" id="sendSelectedIncidentBtn" class="button-primary">Send Selected to Incident API</button>
            <span id="batchIncidentStatus" class="incident-status"></span>
            <a href="/" class="button-link" style="margin-left: auto;">Upload More Images</a> <!-- Moved link here -->
        </div>
    </div> <!-- End of .container -->

    <!-- JavaScript for handling batch sending to Incident API -->
    <script>
        const sendBatchBtn = document.getElementById('sendSelectedIncidentBtn');
        const batchStatus = document.getElementById('batchIncidentStatus');

        if (sendBatchBtn) { // Check if the button exists (i.e., if there are results)
            sendBatchBtn.addEventListener('click', async () => {
                // Find all checked checkboxes
                const checkedBoxes = document.querySelectorAll('.incident-select-checkbox:checked');

                if (checkedBoxes.length === 0) {
                    batchStatus.textContent = 'Please select at least one result to send.';
                    batchStatus.className = 'incident-status error';
                    return; // Stop if nothing is selected
                }

                // Prepare status update and disable button
                batchStatus.textContent = 'Preparing data...';
                batchStatus.className = 'incident-status sending';
                sendBatchBtn.disabled = true;

                // Gather data for selected items
                const selectedItemsData = [];
                let errorInData = false;

                checkedBoxes.forEach(checkbox => {
                    const resultId = checkbox.dataset.resultId;
                    const imageDataUrlInput = document.getElementById(`imageDataUrl_${resultId}`);
                    const imageFilenameInput = document.getElementById(`imageFilename_${resultId}`);
                    const classificationDataInput = document.getElementById(`classificationData_${resultId}`);

                    if (!imageDataUrlInput || !imageFilenameInput || !classificationDataInput) {
                        console.error("Could not find associated elements for result ID:", resultId);
                        errorInData = true; // Mark error
                        return; // Skip this item
                    }

                    try {
                         selectedItemsData.push({
                            // Only send necessary data to backend
                            imageDataUrl: imageDataUrlInput.value,
                            filename: imageFilenameInput.value,
                            classificationObj: JSON.parse(classificationDataInput.value) // Parse classification data here
                        });
                    } catch (parseError) {
                        console.error("Error parsing classification data for result ID:", resultId, parseError);
                        errorInData = true; // Mark error
                    }
                });

                // If critical data was missing or failed to parse for any selected item
                if (errorInData) {
                    batchStatus.textContent = 'Error: Could not gather data for all selected items. Check console.';
                    batchStatus.className = 'incident-status error';
                    sendBatchBtn.disabled = false; // Re-enable button
                    return;
                }

                // Send data to the backend endpoint
                batchStatus.textContent = `Sending ${selectedItemsData.length} item(s)...`;
                try {
                    const response = await fetch('/send-batch-to-incident', { 
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ selectedItems: selectedItemsData }), // Send data array wrapped in an object
                    });

                    const result = await response.json(); // Assume backend always sends JSON

                    if (response.ok && result.success) {
                        batchStatus.textContent = `Successfully sent ${selectedItemsData.length} item(s) to Incident API!`;
                        batchStatus.className = 'incident-status success';
                        // Optionally: uncheck boxes, keep button disabled, etc.
                        // checkedBoxes.forEach(cb => cb.checked = false);
                    } else {
                        batchStatus.textContent = `Error: ${result.message || 'Failed to send batch.'}`;
                        batchStatus.className = 'incident-status error';
                        sendBatchBtn.disabled = false; // Re-enable on failure
                    }
                } catch (error) {
                    console.error('Fetch error sending batch:', error);
                    batchStatus.textContent = 'Error: Network issue or server unavailable.';
                    batchStatus.className = 'incident-status error';
                    sendBatchBtn.disabled = false; // Re-enable on network error
                }
            });
        } else {
             console.log("Send batch button not found (likely no results).");
        }

    </script>
</body>
</html>